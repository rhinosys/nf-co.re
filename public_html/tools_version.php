<?php
//
// nf-core/tools Version Check
//
// Fetches, caches and prints the current version of the nf-core/tools package.
// This is used to display the version number when running the cli tools and to
// display a help message if an update is available.
//
// I'm not actually sure what the tools_all_versions.txt cache file is for,
// but I'm too scared to delete it.
//

$tools_version_fn = dirname(__FILE__) . '/../tools_version.txt';
$tools_all_versions_fn = dirname(__FILE__) . '/../tools_all_versions.txt';

// Get auth secrets
$config = parse_ini_file(dirname(__FILE__) . '/../../config.ini');
define('GH_AUTH', base64_encode($config['github_username'] . ':' . $config['github_access_token']));
// HTTP header to use on GitHub API GET requests
define(
    'GH_API_OPTS',
    stream_context_create([
        'http' => [
            'method' => 'GET',
            'header' => ['User-Agent: PHP', 'Authorization: Basic ' . GH_AUTH],
        ],
    ]),
);

// Fetch releases if file not found or older than 24 hours
if (!file_exists($tools_version_fn) || filemtime($tools_version_fn) < time() - 60 * 60 * 24 || isset($_GET['force'])) {
    $tools_versions_url = 'https://api.github.com/repos/nf-rhinosys/tools/releases';
    $tools_versions_json = json_decode(file_get_contents($tools_versions_url, false, GH_API_OPTS), true);
    if ($tools_versions_json) {
        $versions = [];
        foreach ($tools_versions_json as $release) {
            $versions[] = $release['tag_name'];
        }
        if (count($versions) > 0) {
            file_put_contents($tools_all_versions_fn, implode("\n", array_reverse($versions)));
            file_put_contents($tools_version_fn, $versions[0]);
        }
    }
}

header('Content-type: text/plain');

// First - print the latest version.
// This file is automatically generated by the latest tag in the git repository when a new commit is pushed
$version = file_get_contents($tools_version_fn);
preg_replace('/[^\d\.]/', '', $version);
print $version;
